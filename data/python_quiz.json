
{
    "question": [
        "Q1. What is the keyword used to define a function in Python?",
        "Q2. Which data type is used to store true/false values in Python?",
        "Q3. What is the output of '5 // 2' in Python?",
        "Q4. What is the purpose of the 'pass' statement in Python?",
        "Q5. How do you create a list in Python?",
        "Q6. What is the correct way to import a module in Python?",
        "Q7. What is the index of the first element in a Python list?",
        "Q8. Which keyword is used to handle exceptions in Python?",
        "Q9. What does the 'len()' function return in Python?",
        "Q10. How do you create a single-line comment in Python?",
        "Q11. What is the output of 'type(3.14)' in Python?",
        "Q12. Which method is used to add an element to a Python list?",
        "Q13. How do you access the last element of a list in Python?",
        "Q14. What does 'None' represent in Python?",
        "Q15. Which Python function is used to convert a string to an integer?",
        "Q16. What is the purpose of the 'break' statement in a loop?",
        "Q17. How do you open a file for reading in Python?",
        "Q18. What does the 'in' keyword do in Python?",
        "Q19. Which function is used to get user input in Python?",
        "Q20. What is the output of '2 ** 3' in Python?",
        "Q21. What is a lambda function in Python?",
        "Q22. How do you create a tuple in Python?",
        "Q23. What is the purpose of the '__init__' method in Python classes?",
        "Q24. What does the 'is' operator compare in Python?",
        "Q25. Which statement is used to create a loop in Python?",
        "Q26. How do you remove an element from a Python list?",
        "Q27. What does 'PEP' stand for in Python?",
        "Q28. How do you check if a key exists in a Python dictionary?",
        "Q29. What is the difference between '==' and 'is' in Python?",
        "Q30. How do you create an empty set in Python?",
        "Q31. What is the output of 'bool([])' in Python?",
        "Q32. What is the purpose of the 'elif' statement in Python?",
        "Q33. What is the default value of a variable in Python if not assigned?",
        "Q34. How do you concatenate two strings in Python?",
        "Q35. What is the correct way to define a class in Python?",
        "Q36. Which operator is used for exponentiation in Python?",
        "Q37. How do you create a dictionary in Python?",
        "Q38. What is the difference between a list and a tuple in Python?",
        "Q39. What is the purpose of the 'continue' statement in a loop?",
        "Q40. What does the 'global' keyword do in Python?",
        "Q41. What is the use of the 'zip()' function in Python?",
        "Q42. How do you create a multi-line string in Python?",
        "Q43. What does 'range(5)' generate in Python?",
        "Q44. How do you raise an exception in Python?",
        "Q45. What is the purpose of the 'with' statement in Python?",
        "Q46. What is a Python generator?",
        "Q47. How do you define a decorator in Python?",
        "Q48. What is the difference between 'append()' and 'extend()' in lists?",
        "Q49. What does the 'setdefault()' method do in a dictionary?",
        "Q50. What is the use of the 'enumerate()' function in Python?"
    ],
    "answer": [
        1, 3, 1, 4, 3, 1, 1, 2, 3, 4,
        3, 1, 3, 4, 1, 2, 2, 3, 1, 4,
        1, 3, 2, 4, 1, 3, 2, 1, 3, 4,
        2, 4, 3, 1, 2, 1, 3, 4, 2, 1,
        4, 2, 3, 1, 4, 3, 2, 1, 3, 4
    ],
    "choices": [
        ["def", "func", "lambda", "define"],
        ["int", "float", "bool", "str"],
        ["2", "2.5", "5", "1"],
        ["Skips iterations", "Ends a loop", "Pauses code", "Does nothing"],
        ["list()", "array()", "[1, 2, 3]", "{1, 2, 3}"],
        ["import module_name", "include module_name", "using module_name", "require module_name"],
        ["0", "1", "Depends on the list", "Undefined"],
        ["catch", "handle", "except", "finally"],
        ["Length of the object", "Type of the object", "Value of the object", "Location of the object"],
        ["#", "//", "/*", "--"],
        ["float", "int", "string", "bool"],
        ["append()", "add()", "insert()", "extend()"],
        ["list[-1]", "list[0]", "list[len(list)]", "list[1]"],
        ["A keyword", "An error", "Null value", "A placeholder"],
        ["int()", "str()", "float()", "bool()"],
        ["Stops the loop", "Pauses the loop", "Restarts the loop", "Skips the loop"],
        ["open('file.txt', 'r')", "file('file.txt', 'r')", "read('file.txt')", "write('file.txt')"],
        ["Checks for substring", "Checks for equality", "Loops over values", "Ends loops"],
        ["print()", "input()", "read()", "scan()"],
        ["6", "9", "8", "7"],
        ["Anonymous function", "Recursive function", "Predefined function", "Looping function"],
        ["()", "[]", "{}", "<>"],
        ["Initializes a class", "Defines a function", "Loops over values", "Handles exceptions"],
        ["Memory location", "Value", "Data type", "Equality"],
        ["for", "while", "repeat", "loop"],
        ["remove()", "pop()", "delete()", "clear()"],
        ["Python Easy Program", "Python Enhancement Proposal", "Python Example Program", "Python Execution Protocol"],
        ["dict.has_key()", "'key' in dict", "key_exists(dict)", "key.dict"],
        ["Compares data types", "Compares memory locations", "Compares equality", "Compares lengths"],
        ["set()", "{}", "[]", "dict()"],
        ["True", "False", "None", "Error"],
        ["Starts a loop", "Continues a loop", "Ends a loop", "Defines a condition"],
        ["None", "0", "Empty", "Error"],
        ["str1 + str2", "concat(str1, str2)", "join(str1, str2)", "str1 || str2"],
        ["class MyClass", "MyClass()", "define class MyClass", "MyClass {}"],
        ["**", "^", "pow", "^^"],
        ["{}", "[]", "dict()", "()"],
        ["Immutable vs Mutable", "Ordered vs Unordered", "Nested vs Flat", "Both are the same"],
        ["Stops a loop", "Skips to next iteration", "Ends a function", "Starts a loop"],
        ["Declares a global variable", "Ends the loop", "Declares a local variable", "Clears a global variable"],
        ["Combines iterables", "Sorts iterables", "Filters iterables", "Splits iterables"],
        ["'''string'''", "'string'", "///string///", "string///"],
        ["A list of numbers", "A range object", "An error", "A generator"],
        ["throw Error", "raise Exception", "catch Error", "create Exception"],
        ["Opens resources", "Closes resources", "Manages exceptions", "Both open and close resources"],
        ["A sequence generator", "A list", "An array", "A function"],
        ["@decorator", "function()", "class()", "None"],
        ["Adds a single element", "Adds multiple elements", "Replaces elements", "Deletes elements"],
        ["Adds a default value", "Clears the dictionary", "Deletes a key", "Sorts the dictionary"],
        ["Enumerates a string", "Adds indices to elements", "Counts elements", "Sorts elements"]
    ],
    {
    "hints": [
        "Hint: Used to define a function.",
        "Hint: Stores logical true/false values.",
        "Hint: Integer division removes remainder.",
        "Hint: A placeholder statement.",
        "Hint: Lists use square brackets.",
        "Hint: Use the 'import' keyword.",
        "Hint: Lists in Python are 0-indexed.",
        "Hint: Use 'except' for exceptions.",
        "Hint: Returns the length of an object.",
        "Hint: Single-line comments start with a symbol.",
        "Hint: It's a decimal type.",
        "Hint: Adds an element to a list.",
        "Hint: Use negative indexing.",
        "Hint: Represents null in Python.",
        "Hint: Converts data types.",
        "Hint: Used to exit loops prematurely.",
        "Hint: Opens files in read mode.",
        "Hint: Tests membership in collections.",
        "Hint: Takes user input.",
        "Hint: Represents exponentiation.",
        "Hint: It's an anonymous function.",
        "Hint: Tuples are immutable.",
        "Hint: Initializes a class object.",
        "Hint: Compares object identities.",
        "Hint: Use 'for' or 'while'.",
        "Hint: Removes elements from a list.",
        "Hint: Stands for Python Enhancement Proposal.",
        "Hint: Checks if a key exists in a dictionary.",
        "Hint: '==' checks equality, 'is' checks identity.",
        "Hint: Use 'set()' to create an empty set.",
        "Hint: Empty collections are treated as False.",
        "Hint: 'elif' adds an additional condition.",
        "Hint: Variables must be assigned before use.",
        "Hint: Use '+' to concatenate strings.",
        "Hint: Classes are defined using the 'class' keyword.",
        "Hint: The operator for power calculations.",
        "Hint: Use curly braces '{}' to create a dictionary.",
        "Hint: Lists are mutable; tuples are immutable.",
        "Hint: Skips the current iteration in a loop.",
        "Hint: Declares a variable as global.",
        "Hint: Combines multiple iterables into tuples.",
        "Hint: Triple quotes create multi-line strings.",
        "Hint: Creates a sequence of numbers.",
        "Hint: Use 'raise' to throw exceptions.",
        "Hint: Ensures resources are properly managed.",
        "Hint: Yields values one at a time.",
        "Hint: Defined with the '@' symbol.",
        "Hint: 'append()' adds one element; 'extend()' adds multiple.",
        "Hint: Adds a default value if the key does not exist.",
        "Hint: Adds indices to elements of an iterable."
    ]
}

       
